{"version":3,"file":"static/js/262.2d521b03.chunk.js","mappings":"gNA8CA,UA3CA,WACI,OAA4BA,EAAAA,EAAAA,UAAS,QAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAA0CN,EAAAA,EAAAA,UAAS,GAAnD,eAAOO,EAAP,KAAsBC,EAAtB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAyBR,IAtBAE,EAAAA,EAAAA,YAAU,WACN,IAAIC,EAAe,6CAAyCH,EAAzC,2EADT,wCAGV,qFACIP,EAAU,WACVE,EAAQK,GAFZ,SAGUI,MAAMD,GACXE,MAAK,SAAAC,GAAM,OAAGA,EAAIC,GAAYD,EAAIE,OAC5BC,QAAQC,OAAO,IAAIC,MAAJ,uBAAkC,IACvDN,MAAK,SAAAO,GACFnB,EAAU,YACVI,EAAQe,GACRb,EAAiBa,EAAId,cACxB,IACAe,OAAM,SAAAC,GACHC,QAAQC,IAAIF,EACf,IAbL,4CAHU,sBAkBPd,IAAaN,GAlBN,mCAkBYuB,EACzB,GACA,CAACvB,EAAMM,IAEK,aAAVR,EAAuB,OACtB,iCAAE,uCACE,eAAI0B,UAAU,gBAAd,SACyB,IAAlBpB,GAAwB,eAAIoB,UAAU,YAAd,uCAC1BtB,EAAKuB,QAAQC,KAAI,gBAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,GAAnB,OACd,gBAAaL,UAAU,cAAvB,WAAqC,cAAGA,UAAU,SAAb,SAAuBG,KAAW,uBAAIC,MAAlEC,EADK,QAOjC,C","sources":["components/AdditionalInformation/Reviews.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport { useParams } from \"react-router-dom\";\n\nfunction Reviews () {\n    const [status, setStatus] = useState('idle'); \n    const [item, setItem] = useState('');\n    const [list, setList] = useState([]);\n    const [total_results, setTotal_results] = useState(0);\n    const { movie_id } = useParams();\n\n\n    useEffect(()=>{\n        let reviewsForFetch = `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=30a2ce985f394458475cdee9944c725b&language=en-US&page=1`\n      \n        async function reviewsItem () {\n            setStatus('pending');\n            setItem(movie_id);\n            await fetch(reviewsForFetch)\n            .then(res=>{if(res.ok) {return res.json()} \n            return Promise.reject(new Error(`Can't find anything`))})\n            .then(key => {\n                setStatus('resolved');\n                setList(key);\n                setTotal_results(key.total_results);\n            })\n            .catch(error=>{\n                console.log(error);\n            })\n        }\n        if(movie_id !== item){reviewsItem()} \n    }\n    ,[item, movie_id])\n\n    if(status ==='resolved') {return (\n        <><h2>Reviews :</h2>\n            <ul className='ListOfReviews'>\n                { (total_results === 0) ? (<li className='EmptyCast'>Don't have any review yet</li>) : \n                (list.results.map(({author, content, id}) =>(\n                    <li key={id} className='ReviewsCast'><p className='Author'>{author}</p><p>{content}</p></li>)))        \n                }\n            </ul>\n        </>\n    )\n    }\n}\n\nexport default Reviews"],"names":["useState","status","setStatus","item","setItem","list","setList","total_results","setTotal_results","movie_id","useParams","useEffect","reviewsForFetch","fetch","then","res","ok","json","Promise","reject","Error","key","catch","error","console","log","reviewsItem","className","results","map","author","content","id"],"sourceRoot":""}