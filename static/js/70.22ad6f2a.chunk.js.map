{"version":3,"file":"static/js/70.22ad6f2a.chunk.js","mappings":"uNAgDA,UA5CA,WACI,OAA4BA,EAAAA,EAAAA,UAAS,QAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAA0CN,EAAAA,EAAAA,UAAS,GAAnD,eAAOO,EAAP,KAAsBC,EAAtB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAwBR,IAtBAE,EAAAA,EAAAA,YAAU,WACN,IAAIC,EAAc,6CAAyCH,EAAzC,oEADR,wCAGV,qFACIP,EAAU,WACVE,EAAQK,GAFZ,SAGUI,MAAMD,GACXE,MAAK,SAAAC,GAAM,OAAGA,EAAIC,GAAYD,EAAIE,OAC5BC,QAAQC,OAAO,IAAIC,MAAJ,uBAAkC,IACvDN,MAAK,SAAAO,GACFnB,EAAU,YACVI,EAAQe,EAAIC,MACZd,EAAiBa,EAAIC,KAAKC,OAC7B,IACAC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,EACf,IAbL,4CAHU,sBAkBPhB,IAAaN,GAlBN,mCAkBYyB,EACzB,GACA,CAACzB,EAAMM,IAEK,aAAVR,EAAuB,OAAQ,iCAC9B,4CACA,gBAAK4B,UAAU,aAAf,SACoB,IAAlBtB,GAAwB,cAAGsB,UAAU,YAAb,6CACtBxB,EAAKyB,KAAI,gBAAEC,EAAF,EAAEA,UAAWC,EAAb,EAAaA,cAAeC,EAA5B,EAA4BA,WAAYC,EAAxC,EAAwCA,aAAxC,OAA0D,iBAAKL,UAAU,oBAAf,WAC/D,0BAAK,gBAAKM,IAAQD,EAAD,0CAAoDA,GAAiBE,EAAQC,MAAO,IAAKC,OAAQ,IAAKC,IAAG,uBAE1H,uBAAIP,KACJ,wCAAgBC,EAAWO,QAAQ,GAAnC,UAJuGT,EAAlG,QASpB,C","sources":["components/AdditionalInformation/Credits.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport { useParams } from \"react-router-dom\";\nimport NoFoto from '../../Images/no_image.png';\n\nfunction Credits () {\n    const [status, setStatus] = useState('idle'); \n    const [item, setItem] = useState('');\n    const [list, setList] = useState([]);\n    const [total_results, setTotal_results] = useState(0);\n    const { movie_id } = useParams();\n\n    useEffect(()=>{\n        let creditForFetch = `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=30a2ce985f394458475cdee9944c725b&language=en-US`;\n       \n        async function creditItem () {\n            setStatus('pending');\n            setItem(movie_id);\n            await fetch(creditForFetch)\n            .then(res=>{if(res.ok) {return res.json()} \n            return Promise.reject(new Error(`Can't find anything`))})\n            .then(key => {\n                setStatus('resolved');\n                setList(key.cast);\n                setTotal_results(key.cast.length);\n            })\n            .catch(error=>{\n                console.log(error);\n            })\n        }\n        if(movie_id !== item){creditItem()} \n    }\n    ,[item, movie_id])\n    \n    if(status ==='resolved') {return (<>\n        <h2>Cast of movie:</h2> \n        <div className=\"ListOfCast\">\n        {(total_results === 0) ? (<p className='EmptyCast'>No information about the actors</p>) : \n            list.map(({credit_id, original_name, popularity, profile_path}) =>(<div className='ListOfCast__names' key={credit_id}>\n                <div><img src = {(profile_path) ? `https://image.tmdb.org/t/p/w500/${profile_path}` : NoFoto} width={200} height={300} alt={`{original_name}`}/> \n                </div>\n                <p>{original_name}</p>\n                <p>Popularity: {popularity.toFixed(2)} %</p>\n            </div>))}\n        </div>\n        </>\n    )}\n}\n\nexport default Credits"],"names":["useState","status","setStatus","item","setItem","list","setList","total_results","setTotal_results","movie_id","useParams","useEffect","creditForFetch","fetch","then","res","ok","json","Promise","reject","Error","key","cast","length","catch","error","console","log","creditItem","className","map","credit_id","original_name","popularity","profile_path","src","NoFoto","width","height","alt","toFixed"],"sourceRoot":""}